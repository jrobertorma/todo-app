Dev log
04/02/2021
Start of the project, first commit

07/02/2021
Definition of objectives

08/02/2021
App design

09/02/2021
Research
Add react-router

10/02/2021
Files structure, react-router testing

11/02/2021
Adding empty components and navigation

12/02/2021
Adding more empty components, adding firebase

13/02/2021
Installing firebase, creating env vars

14/02/2021
Adding firebase config and using react context api to provide firebase to all app's components

15/02/2021
Adding firebase auth api to src\components\Firebase\firebase.js (untracked by git, it has the firebase config)

16/02/2021
Research and comments

17-19/02/2021
Adding signUp components

PRIMARY GOALS
Build a todo-app from scratch, using react, redux and firebase.

What do you need to create the app?
	1. Initialize project (done)

	2.1 Design user cases, user stories, or something to establish the data flows and needed operations
	2.2 App design (UI and functionalities)

	3.1 Build backend (it is going to be mostly firebase configuration)
	3.2 Build front-end (components)
	3.3 Wire back and front ends
	3.4 Test
	3.5 First MVP release

	4 Project documentation

2. APP DESIGN
	2.1 User cases
		There is going to be just one user (its name will be 'user', lol).
		'User' will have 3 basic user cases

		a) See to-do list: You call the firebase data and pass it to redux, you'll need to create a reducer, some actions and wire them to a data rendering component.
		b) Create a to-do list item: You will need a form, validate it (i guess we will use react-final-form) and use it to update the firebase data, I dont' know if redux is needed right here.
		c) Edit a to-do list item
			First you'll need the item data (fetching data from firebase)
			Then you'll need to show the data
			And lastly (trough a form) you will make the updates to firebase
			The delete item is going to be a similar operation

	2.2 UI and functionalities design
		The app will have two 'models' (in terms of design, not necessarily in code): User and Task
		
		USER
			The app will be able to make all CRUD operations to this 'model'
			This 'model' is required to implement the Login functionality
			I dont' know yet all the components this 'model' needs (I hope firebase will take care of most of them), but at least some sort 'Login' will be needed for this to work. 
		
		TASK
			Again, the app will be able to make all CRUD operations to this 'model'
			This will be the 'core' of the app (its a to-do app after all, lol)

			- TaskList
			- TaskCard
			- TaskForm (for both 'new task' and 'edit task' user cases)

3. APP DEVELOPMENT
	3.1 BACKEND: Firstly you need to check Firebase and React integrations to create the login, and all the 'users' CRUD. We are going to use this tutorial https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial (lol). And, in order for this stuff to work you need to add react-router to the app and play a little with some testing components. So we will be working simultaneously with the 'backend' and the frontend.

		3.1.1 Install firebase
			
			'yarn add firebase'

		3.1.2 Creating Firebase backend

			3.1.2.1 Create a firebase account and go to the console (https://console.firebase.google.com/)
			3.1.2.2 Create project, get configuration object, be careful lol (https://firebase.google.com/docs/web/setup)
			3.1.2.3 Create configuration variables, we are going to use the .env.development.local file to store the api keys, note that this is only for development, you should store production secret keys on the backend (https://stackoverflow.com/questions/48699820/how-do-i-hide-api-key-in-create-react-app)
			3.1.2.4 Add firebase support through react's context api (src\components\Firebase\context.js)
			3.1.2.5 Add firebase auth api support to the firebase class (on src\components\Firebase\firebase.js see the notes at the end of this file)

	3.2 FRONTEND: The stuff the user see and interacts with.
		3.2.1 Add react-router to the app (https://reactrouter.com/web/guides/quick-start)
			
			'yarn add react-router-dom'
			
			Then you can import the react-router components that deal with the routes and links.
			e.g.

				import {
				  BrowserRouter as Router,
				  Switch,
				  Route,
				  Link
				} from "react-router-dom";

		3.2.2 Create file structure for the components, make sure to follow a legible structure e.g. src/components/ {all the components}; src/containers; etc.

		3.2.3 Add react-router and write the routes constants and <Navigation> component (src\constants\routes.js and src\components\Navigation\index.js)

		3.2.4 Add dummy components for route testing (we will be updating them later)

		3.2.5 Create Auth Components

			3.2.5.1 SignUp components

	3.3 CONNECT FRONTEND AND BACKEND
		3.3.1 Here: 'Now the registration of a new user should work. However, Iâ€™d like to make one improvement on how we access the Firebase instance here.'


* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * N O T E S * * * * * * * * * * * * * * *
* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

src\components\Firebase\firebase.js
import app from "firebase/app";
import 'firebase/auth'

const config = {
 /*
 	The firebase configuration object or the env vars callings (just for development stage)
 */
};

class Firebase {
    constructor() {
        app.initializeApp(config);

        this.auth = app.auth();

        // *** Auth API ***

        doCreateUserWithEmailAndPassword = (email, password) =>
        this.auth.createUserWithEmailAndPassword(email, password);

        doSignInWithEmailAndPassword = (email, password) =>
        this.auth.signInWithEmailAndPassword(email, password);

        doSignOut = () => this.auth.signOut();

        doPasswordReset = email => this.auth.sendPasswordResetEmail(email);

        doPasswordUpdate = password =>
          this.auth.currentUser.updatePassword(password);
    }
}

export default Firebase;

COOL LINKS:
https://firebase.google.com/docs/web/setup
https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial
https://reactrouter.com/web/guides/quick-start

https://www.robinwieruch.de/complete-firebase-authentication-react-tutorial#firebase-in-react-setup